class PosMaterialHeader {
  String? id,
      salesName,
      shipNumber,
      opticName,
      opticAddress,
      opticType,
      posType,
      productId,
      productName,
      posterMaterialId,
      posterMaterial,
      posterContentId,
      posterContent,
      notes,
      deliveryMethod,
      approverSm,
      reasonSm,
      dateApprovelSm,
      approverAdm,
      reasonAdm,
      dateApprovelAdm,
      approverGm,
      reasonGm,
      dateApprovelGm,
      assignTo,
      status,
      insertDate,
      updateDate,
      productQty,
      price,
      priceAdjustment,
      productSizeS,
      productSizeM,
      productSizeL,
      productSizeXl,
      productSizeXXL,
      productSizeXXXL,
      posterDesignOnly,
      posterWidth,
      posterHeight,
      approvalSm,
      approvalAdm,
      approvalGm,
      createdBy,
      smName,
      admName,
      gmName;

  PosMaterialHeader.fromJson(Map json)
      : id = json['id_pos_material'] ?? '',
      salesName = json['salesname'] ?? '',
      shipNumber = json['customer_ship_number'] ?? '',
      opticName = json['optic_name'] ?? '',
      opticAddress = json['optic_address'] ?? '',
      opticType = json['optic_type'] ?? '-',
      posType = json['pos_type'] ?? 'OTHER', 
      productId = json['product_id'] ?? '-',
      productName = json['product_name'] ?? '-',
      productQty = json['product_qty'] ?? '0',
      price = json['price_estimate'] ?? '0',
      priceAdjustment = json['price_adjustment'] ?? '0',
      productSizeS = json['product_size_s'] ?? '0',
      productSizeM = json['product_size_m'] ?? '0',
      productSizeL = json['product_size_l'] ?? '0',
      productSizeXl= json['product_size_xl'] ?? "0",
      productSizeXXL = json['product_size_xxl'] ?? "0",
      productSizeXXXL = json['product_size_xxxl'] ?? "0",
      posterDesignOnly = json['poster_design_only'] ?? '0',
      posterMaterialId = json['poster_material_id'] ?? '',
      posterMaterial = json['poster_material'] ?? '',
      posterWidth = json['poster_width'] ?? "0",
      posterHeight = json['poster_height'] ?? "0",
      posterContentId = json['poster_content_id'] ?? '',
      posterContent = json['poster_content'] ?? '',
      notes = json['notes'] ?? '',
      deliveryMethod = json['delivery_method'] ?? '',
      approvalSm = json['approval_sm'] ?? "0",
      approverSm = json['approver_sm'] ?? '-',
      reasonSm = json['reason_sm'] ?? '',
      dateApprovelSm = json['date_approval_sm'] ?? '2024-01-01 08:00:00',
      approvalAdm = json['approval_adm'] ?? "0",
      approverAdm = json['approver_adm'] ?? '-',
      reasonAdm = json['reason_adm'] ?? '',
      dateApprovelAdm = json['date_approval_adm'] ?? '2024-01-01 08:00:00',
      approvalGm = json['approval_gm'] ?? "0",
      approverGm = json['approver_gm'] ?? '-',
      reasonGm = json['reason_gm'] ?? '',
      dateApprovelGm = json['date_approval_Gm'] ?? '2024-01-01 08:00:00',
      assignTo = json['assign_to'] ?? '-',
      status = json['status'] ?? 'PENDING',
      createdBy = json['created_by'] ?? '-',
      insertDate = json['insert_date'] ?? '-',
      updateDate = json['update_date'] ?? '-',
      smName = json['sm_name'] ?? '',
      admName = json['adm_name'] ?? '',
      gmName = json['gm_name'] ?? '';

  Map toJson() {
    return {
      'id_pos_material' : id,
      'salesname' : salesName,
      'customer_ship_number' : shipNumber,
      'optic_name' : opticName, 
      'optic_address' : opticAddress,
      'optic_type' : opticType,
      'pos_type' : posType,
      'product_id' : productId,
      'product_name' : productName,
      'product_qty' : productQty,
      'price_estimate' : price,
      'price_adjustment' : priceAdjustment,
      'product_size_s' : productSizeS,
      'product_size_m' : productSizeM,
      'product_size_l' : productSizeL,
      'product_size_xl' : productSizeXl,
      'product_size_xxl' : productSizeXXL,
      'product_size_xxxl' : productSizeXXXL,
      'poster_design_only' : posterDesignOnly,
      'poster_material_id' : posterMaterialId,
      'poster_material' : posterMaterial,
      'poster_width' : posterWidth,
      'poster_height' : posterHeight,
      'poster_content_id' : posterContentId,
      'poster_content' : posterContent,
      'notes' : notes,
      'delivery_method' : deliveryMethod,
      'approval_sm' : approvalSm,
      'approver_sm' : approverSm,
      'reason_sm' : reasonSm,
      'date_approval_sm' : dateApprovelSm,
      'approval_adm' : approvalAdm,
      'approver_adm' : approverAdm,
      'reason_adm' : reasonAdm,
      'date_approval_adm' : dateApprovelAdm,
      'approval_gm' : approvalGm,
      'approver_gm' : approverGm,
      'reason_gm' : reasonGm,
      'date_approval_gm' : dateApprovelGm,
      'assign_to' : assignTo,
      'status' : status,
      'created_by' : createdBy,
      'insert_date' : insertDate,
      'update_date' : updateDate,
      'sm_name' : smName,
      'adm_name' : admName,
      'gm_name' : gmName,
    };
  }
}
